#!/bin/bash

branch="$(git symbolic-ref --short HEAD)"
declare -a refargs

while [[ "$1" != "--" ]]; do
    arg="$1"
    if shift; then
        refall+=($arg)
    else
        break;
    fi
done

if [[ "$#" > 0 ]]; then
    shift
    execute=( "$@" )
    function on_success() {
        echo "${execute[@]}"
        eval "${execute[@]}"
    }
else
    if [[ "${#refall[@]}" ==  0 ]]; then
        remote=$(git for-each-ref "refs/heads/$branch" --format="%(upstream:short)" | cut -d / -f 1)

        if [[ "$remote" == "" ]]; then
            echo "usage: $0 [ rev-list arguments ]  [ -- verification command ]"
            echo "\t if no rev-list argument is provided the verification will use the updstream configuration for your current git repository"
            echo
            echo "Need an upstream commit and \"$branch\" don't have an upstream setup." > /dev/stderr;
            exit;
        fi

        refall=( --reverse @{upstream}...$branch )
    fi

    function on_success() {
        gerrit review --verified +1 $(git rev-list -1 HEAD)
        msg verified
    }
fi

function msg() {
    echo
    echo ================================================================================
    echo "$@"
    echo ================================================================================
    echo
}

function build_command() {
    if ./gradlew clean build; then
        return 0;
    else
        return 1;
    fi
}

function on_error() {
    msg "fail $commit"
    git update-ref refs/verify/broken HEAD
}

. git-foreach "${refall[@]}" --exec build_command --on-success on_success --on-error on_error
